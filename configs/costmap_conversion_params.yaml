###########################################################################################
## 注意: 代价地图转换是实验性功能。它的目的是将多个点障碍物合并成集群，               ##
## 在单独的线程中计算，以提高局部规划的整体效率。                                      ##
## 然而，目前实现的转换算法仍处于早期开发阶段。欢迎贡献！                             ##
###########################################################################################

TebLocalPlannerROS:

  ## 代价地图转换器插件   
  #costmap_converter_plugin: "costmap_converter::CostmapToPolygonsDBSMCCH"  # 将代价地图转换为多边形的DBSMCCH算法
  costmap_converter_plugin: "costmap_converter::CostmapToLinesDBSRANSAC"  # 使用DBSRANSAC算法将代价地图转换为直线
  #costmap_converter_plugin: "costmap_converter::CostmapToLinesDBSMCCH"  # 使用DBSMCCH算法将代价地图转换为直线
  #costmap_converter_plugin: "costmap_converter::CostmapToPolygonsDBSConcaveHull"  # 使用凹包算法将代价地图转换为多边形
  costmap_converter_spin_thread: True  # 是否在单独的线程中运行代价地图转换器
  costmap_converter_rate: 5  # 代价地图转换的频率，单位为赫兹
 
 
  ## 配置插件 (命名空间 move_base/costmap_to_lines 或 move_base/costmap_to_polygons)
  ## costmap_converter/CostmapToLinesDBSRANSAC, costmap_converter/CostmapToLinesDBSMCCH, costmap_converter/CostmapToPolygonsDBSMCCH
  costmap_converter/CostmapToLinesDBSRANSAC:
    cluster_max_distance: 0.4  # 聚类算法中点的最大距离，单位为米
    cluster_min_pts: 2  # 形成聚类所需的最小点数
    ransac_inlier_distance: 0.15  # RANSAC算法中内点到直线的最大距离，单位为米
    ransac_min_inliers: 10  # RANSAC算法要求的最小内点数量
    ransac_no_iterations: 1500  # RANSAC算法的迭代次数
    ransac_remainig_outliers: 3  # RANSAC算法中允许的剩余离群点数量
    ransac_convert_outlier_pts: True  # 是否将RANSAC的离群点转换为障碍物点
    ransac_filter_remaining_outlier_pts: False  # 是否过滤掉剩余的离群点
    convex_hull_min_pt_separation: 0.1  # 凸包算法中点的最小分离距离，单位为米

